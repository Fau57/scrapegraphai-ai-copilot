[
    {
        "prompt": "how is gemini implemented in Scrapegraphai?",
        "answer": "\"\"\"\nGemini Module\n\"\"\"\nfrom langchain_google_genai import ChatGoogleGenerativeAI\n\n\nclass Gemini(ChatGoogleGenerativeAI):\n    \"\"\"\n    A wrapper for the Gemini class that provides default configuration\n    and could be extended with additional methods if needed.\n\n    Args:\n        llm_config (dict): Configuration parameters for the language model\n                        (e.g., model=\"gemini-pro\")\n    \"\"\"\n\n    def __init__(self, llm_config: dict):\n        # replace \"api_key\" to \"google_api_key\"\n        llm_config[\"google_api_key\"] = llm_config.pop(\"api_key\", None)\n        super().__init__(**llm_config)\n"
    }
]