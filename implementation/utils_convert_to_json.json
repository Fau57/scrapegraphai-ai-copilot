[
    {
        "prompt": "how is implemented convert_to_json",
        "answer": "\"\"\"\nConvert to json module\n\"\"\"\nimport json\nimport os\nimport sys\n\n\ndef convert_to_json(data: dict, filename: str, position: str = None) -> None:\n    \"\"\"\n    Converts a dictionary to a JSON file and saves it at a specified location.\n\n    Args:\n        data (dict): The data to be converted into JSON format.\n        filename (str): The name of the output JSON file, without the '.json' extension.\n        position (str, optional): The file path where the JSON file should be saved. Defaults to the directory of the caller script if not provided.\n\n    Returns:\n        None: The function does not return anything.\n        \n    Raises:\n        ValueError: If 'filename' contains '.json'.\n        FileNotFoundError: If the specified directory does not exist.\n        PermissionError: If write permissions are lacking for the directory.\n\n    Example:\n        >>> convert_to_json({'id': [1, 2], 'value': [10, 20]}, 'output', '/path/to/save')\n        Saves a JSON file named 'output.json' at '/path/to/save'.\n\n    Notes:\n        This function automatically ensures the directory exists before attempting to write the file. If the directory does not exist, it will attempt to create it.\n    \"\"\"\n\n    if \".json\" in filename:\n        filename = filename.replace(\".json\", \"\")  # Remove .json extension\n\n  # Get the directory of the caller script\n    if position is None:\n        # Get directory of the main script\n        caller_dir = os.path.dirname(os.path.abspath(sys.argv[0]))\n        position = caller_dir\n\n    try:\n        os.makedirs(position, exist_ok=True)\n        with open(os.path.join(position, f\"{filename}.json\"), \"w\", encoding=\"utf-8\") as f:\n            f.write(json.dumps(data))\n    except FileNotFoundError as fnfe:\n        raise FileNotFoundError(\n            f\"The specified directory '{position}' does not exist.\") from fnfe\n    except PermissionError as pe:\n        raise PermissionError(\n            f\"You don't have permission to write to '{position}'.\") from pe\n"
    }
]