[
    {
        "prompt": "how is openai_itt implemented in Scrapegraphai?",
        "answer": "\"\"\"\nOpenAIImageToText Module\n\"\"\"\n\nfrom langchain_openai import ChatOpenAI\nfrom langchain_core.messages import HumanMessage\n\n\nclass OpenAIImageToText(ChatOpenAI):\n    \"\"\"\n    A wrapper for the OpenAIImageToText class that provides default configuration\n    and could be extended with additional methods if needed.\n\n    Args:\n        llm_config (dict): Configuration parameters for the language model.\n        max_tokens (int): The maximum number of tokens to generate.\n\n    \"\"\"\n\n    def __init__(self, llm_config: dict):\n        super().__init__(**llm_config, max_tokens=256)\n\n    def run(self, image_url: str) -> str:\n        \"\"\"\n        Runs the image-to-text conversion using the provided image URL.\n\n        Args:\n            image_url (str): The URL of the image to convert.\n\n        Returns:\n            str: The text description of the image.\n        \"\"\"\n        message = HumanMessage(\n            content=[\n                {\"type\": \"text\", \"text\": \"What is this image showing\"},\n                {\n                    \"type\": \"image_url\",\n                    \"image_url\": {\n                        \"url\": image_url,\n                        \"detail\": \"auto\",\n                    },\n                },\n            ]\n        )\n\n        # Use the invoke method from the superclass (ChatOpenAI)\n        result = self.invoke([message]).content\n        return result\n"
    }
]